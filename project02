
如何解决系统重复安装 ?

 1> 定义默认启动标签 (本地启动)
label local
 menu default
 2> 更改启动加载顺序(本地磁盘引导)
 

如何增加新的标签安装RHEL6?
 1) 发布RHEL6 ISO镜像
[root@localhost ~]# vim /etc/fstab 
172.25.254.250:/content /mnt    nfs ro  0 0
/mnt/rhel6.5/x86_64/isos/rhel-server-6.5-x86_64-dvd.iso  /rhel6u5 iso9660 ro 0 0
[root@localhost ~]# mkdir -p /rhel6u5

[root@localhost ~]# mount -a
[root@localhost ~]# mount |grep rhel6
/mnt/rhel6.5/x86_64/isos/rhel-server-6.5-x86_64-dvd.iso on /rhel6u5 type iso9660 (ro,relatime)

[root@localhost ~]# ln -s /rhel6u5/ /var/www/html/rhel6u5
[root@localhost ~]# service httpd restart

[root@localhost ~]# wget  http://127.0.0.1/rhel6u5/media.repo &>/dev/null  &&  echo "发布成功"

 2）生成ks.cfg文件并发布

---------------------------------------------------------------------------
[root@localhost ~]# cat /var/www/html/rhel6u5_ks.cfg 
#platform=x86, AMD64, or Intel EM64T
#version=DEVEL
# Firewall configuration
firewall --disabled
# Install OS instead of upgrade
install
# Use network installation
url --url="http://192.168.0.16/rhel6u5"
# Root password
rootpw --plaintext redhat
# System authorization information
auth  --useshadow  --passalgo=sha512
# Use text mode install
text
firstboot --disable
# System keyboard
keyboard us
# System language
lang en_US
# SELinux configuration
selinux --disabled
# Installation logging level
logging --level=info
# Reboot after installation
reboot
# System timezone
timezone --isUtc Asia/Shanghai
# Network information
network  --bootproto=dhcp --device=eth0 --onboot=on
# System bootloader configuration
bootloader --location=mbr
# Clear the Master Boot Record
zerombr
# Partition clearing information
clearpart --all --initlabel 
# Disk partitioning information
part /boot --fstype="ext4" --size=200
part / --fstype="ext4" --size=9000
part swap --fstype="swap" --size=1024

%pre
clearpart --all
part /boot --fstype ext4 --size=100
part pv.100000 --size=10000
part swap --size=512
volgroup vg --pesize=32768 pv.100000
logvol /home --fstype ext4 --name=lv_home --vgname=vg --size=480
logvol / --fstype ext4 --name=lv_root --vgname=vg --size=8192
%end


%post
touch /tmp/abc
%end

%packages
@base
@chinese-support
tigervnc
openssh-clients

%end
------------------------------------------------------------------------------------


 3）定义当前系统的内核文件 (vmlinuz/initrd)
[root@localhost ~]# mkdir  -p /var/lib/tftpboot/rhel6u5
[root@localhost isolinux]# cp vmlinuz initrd.img /var/lib/tftpboot/rhel6u5/

 4) 生成标签（内核与ks文件）
--------------------------------------------
[root@localhost isolinux]# vim /var/lib/tftpboot/pxelinux.cfg/default
label install6
        menu label Install rhel6u5
        kernel rhel6u5/vmlinuz
        append initrd=rhel6u5/initrd.img ks=http://192.168.0.16/rhel6u5_ks.cfg


测试:





++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Cobbler介绍

 http://www.cobblerd.org/
 
Cobbler是一个快速网络安装linux的服务，而且在经过调整也可以支持网络安装windows。该工具使用python开发，小巧轻便，使用简单的命令即可完成PXE网络安装环境的配置，同时还可以管理DHCP，DNS，以及yum包镜像。Cobbler支持命令行管理，web界面管理，还提供了API接口，可以方便二次开发使用。和Kickstart不同的是，使用cobbler不会因为在局域网中启动了dhcp而导致有些机器因为默认从pxe启动在重启服务器后加载tftp内容导致启动终止。

关闭之前的dhcp服务器
 [root@localhost ~]# systemctl stop dhcpd


启动新的节点serverb 
[root@foundation1 ~]# rht-vmctl reset serverb
Are you sure you want to reset serverb? (y/n) y

 [root@servera ~]# ssh root@192.168.0.16
 
 [root@localhost ~]# ssh root@192.168.0.11

第一步：
更改主机名，关闭seliunx，关闭eth0网卡，设置网关

[root@serverb ~]# hostnamectl set-hostname cobbler
[root@cobbler ~]# sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config 
[root@cobbler ~]# setenforce 0

[root@cobbler ~]# sed -i 's/ONBOOT=yes/ONBOOT=no/' /etc/sysconfig/network-scripts/ifcfg-eth0
[root@cobbler ~]# sed -i '$a GATEWAY=192.168.0.10' /etc/sysconfig/network-scripts/ifcfg-eth1
[root@cobbler ~]# service network restart

  
第二步: 下载软件，并安装
[root@cobbler ~]# wget -r ftp://172.25.254.250/notes/project/software/cobbler_rhel7/
[root@cobbler ~]# mv 172.25.254.250/notes/project/software/cobbler_rhel7/ cobbler

[root@cobbler ~]# cd cobbler/
[root@cobbler cobbler]# rpm -ivh python2-simplejson-3.10.0-1.el7.x86_64.rpm 
[root@cobbler cobbler]# rpm -ivh python-django-1.6.11.6-1.el7.noarch.rpm python-django-bash-completion-1.6.11.6-1.el7.noarch.rpm

[root@cobbler cobbler]# yum localinstall cobbler-2.8.1-2.el7.x86_64.rpm cobbler-web-2.8.1-2.el7.noarch.rpm 
---tftpserver与httpd服务

第三步: 启动服务
[root@cobbler cobbler]# systemctl start cobblerd
[root@cobbler cobbler]# systemctl start httpd
[root@cobbler cobbler]# systemctl enable httpd
[root@cobbler cobbler]# systemctl enable cobblerd


第四步：cobbler check 检测环境

 解决1--->
[root@cobbler cobbler]# vim /etc/cobbler/settings 
server: 192.168.0.11
 解决2--->
[root@cobbler cobbler]# vim /etc/cobbler/settings
next_server: 192.168.0.11
解决3--> 关闭selinux
[root@cobbler cobbler]# getenforce 
Permissive
解决4-->激活tftp服务
[root@cobbler cobbler]# sed -i 's/disable.*/disable=no/' /etc/xinetd.d/tftp

解决5-->网络引导文件
[root@cobbler cobbler]# yum -y install syslinux
解决6-->enable and start rsyncd.service with systemctl

[root@cobbler cobbler]# systemctl start rsyncd 
[root@cobbler cobbler]# systemctl enable rsyncd 
[root@cobbler cobbler]# netstat -tnlp |grep :873

解决7--> 忽略

解决8-->
[root@cobbler cobbler]# yum -y install pykickstart

解决9---> 设置模板的（root用户）密码变量
"openssl passwd -1 -salt 'random-phrase-here' 'your-password-here'"

[root@cobbler cobbler]# openssl passwd -1 -salt 'random-phrase-here' 'redhat'
$1$random-p$MvGDzDfse5HkTwXB2OLNb.
[root@cobbler cobbler]# vim /etc/cobbler/settings 
default_password_crypted: "$1$random-p$MvGDzDfse5HkTwXB2OLNb."

解决10--> 安装fence设备
[root@cobbler cobbler]# yum -y install fence-agents



 第五步:导入镜像
Cobbler 配置主要位置：/var/lib/cobbler/
snippets 代码  位置：/var/lib/cobbler/snippets/
Kickstart 模板  位置 : /var/lib/cobbler/kickstarts/
默认使用的ks文件: /var/lib/cobbler/kickstarts/default.ks
安装源镜像       位置 : /var/www/cobbler/ks_mirror/ 

[root@cobbler ~]# mkdir /yum
[root@cobbler ~]# mount -t nfs 172.25.254.250:/content /mnt/
[root@cobbler ~]# mount -o loop /mnt/rhel7.2/x86_64/isos/rhel-server-7.2-x86_64-dvd.iso /yum/

[root@cobbler ~]# cobbler import --path=/yum --name=rhel-server-7.2-base --arch=x86_64
.....
*** TASK COMPLETE ***

[root@cobbler ~]# cobbler distro list  --镜像列表
   rhel-server-7.2-base-x86_64

[root@cobbler ~]#  cobbler profile list  --安装列表
   rhel-server-7.2-base-x86_64

第六步
修改dhcp，让cobbler来管理dhcp，并进行cobbler配置同步
[root@cobbler ~]# yum -y install dhcp

[root@cobbler ~]# vim /etc/cobbler/dhcp.template 
subnet 192.168.0.0 netmask 255.255.255.0 {
     option routers             192.168.0.10;
     option domain-name-servers 172.25.254.254;
     option subnet-mask         255.255.255.0;
     range dynamic-bootp        192.168.0.100 192.168.0.150;
     default-lease-time         21600;
     max-lease-time             43200;
     next-server                $next_server;
     class "pxeclients" {
          match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
          if option pxe-system-type = 00:02 {
                  filename "ia64/elilo.efi";
          } else if option pxe-system-type = 00:06 {
                  filename "grub/grub-x86.efi";
          } else if option pxe-system-type = 00:07 {
                  filename "grub/grub-x86_64.efi";
          } else {
                  filename "pxelinux.0";
          }
     }

}


[root@cobbler ~]# vim /etc/cobbler/settings 
manage_dhcp: 1

[root@cobbler ~]# systemctl restart cobblerd


第7步:
[root@cobbler ~]# cobbler sync

[root@cobbler ~]# systemctl restart xinetd


---------------------------------------测试---------------------------------------------------


访问web界面:
[root@cobbler ~]# netstat -tnlp |grep :443

访问: firefox 
  https://192.168.0.11/cobbler_web
   
[root@cobbler httpd]#  htdigest /etc/cobbler/users.digest "Cobbler" abc
Adding user abc in realm Cobbler
New password: 
Re-type new password:



---------------------------------
增加一个ks脚本
[root@cobbler ~]# cp /root/ks.cfg /var/lib/cobbler/kickstarts/
[root@cobbler ~]# cobbler profile add --name=myks1 --distro=rhel-server-7.2-base-x86_64 --kickstart=/var/lib/cobbler/kickstarts/ks.cfg

[root@cobbler ~]# cobbler profile list
   myks1
   rhel-server-7.2-base-x86_64















